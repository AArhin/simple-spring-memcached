#summary The planned steps to get to a 1.0 release.
#labels Phase-Requirements

== Base Assumptions ==
  * Each version fully unit tested
  * Each version fully integration tested

== ~~0.1~~ (Done) ==
  * Read-through individual item cache

== ~~0.2~~ (Done) ==
  * Read-through multiplexed item cache

== ~~0.3~~ (Done) ==
  * Update individual item cache

== 0.4 ==
  * Update multiplexed item cache

== 0.5 ==
  * Invalidate individual item cache

== 0.6 ==
  * Invalidate multiplexed item cache

== 0.7 ==
  * Read-through individual item cache by assigned id

== 0.8 ==
  * Read-through multiplexed item cache by assigned id

== Further ==
  * Instead of using keyIndex = -1 to mean the return value holds the key, change the meaning of -1 to signify assigned ID. (Doesn't work for multi-cache annotations.)
  * Namespace invalidation
  * Namespace cataloging
  * Runtime memcached node switching
  * anti-stampeding support?
  * "Soft" expirations?
  * blocking cache gets (a la Ehcache Blocking Cache)?
  * JMX Mgmt
  * Cache Disabling
  * Client pooling
  * Provide a class/bean name to process input params
  * Access to Memcached stats (plus decorations for %ages)
  * Internal stats
  * Multiple logical memcached nodes
  * Built-in second-level cache?