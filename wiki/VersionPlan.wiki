#summary The current plan for the upcoming releases.
#labels Phase-Requirements

== Base Assumptions ==
  * Each version fully unit tested
  * Each version fully integration tested
----
= Version 2 =

== 2.0.0 (_In Progress_) ==
  * Inline parameter annotation, rather than an integer _keyIndex_, to identify the object that will provide the key (*Done*)
  * Cache key can be generated using several input method's parameters (*Done*)
  * Counters support: increment, decrement, update (overwrite) and read (*Done*)
  * ~~Ability for the key generation to be done via a referenced bean that adheres to a SSM-specified interface~~
  * Runtime memcached node switching. IPs of memcached servers can be modified in the fly without redeploying application (*Done*)
  * Object can be serialized to json, pluggable json transcoders mechanism configurable per class (*Done*)
  * Support different memcached clients: [http://code.google.com/p/spymemcached/ spymemcached] and [http://code.google.com/p/xmemcached/ xmemcached] (*Done*)
  * Integration with Spring 3 (*Done*)
  * Order of missed keys are the same as order of input arguments in intercepted method (*Done*)
  * Extend ReadThroughMultiCache with options to:
    * generate cache key from result, objects from result will be added to cache not by concatenating method arguments but invoking  CacheKeyMethod on each object in result list (*Done*)
    * skip null values in result (*Done*)
    * add null values to cache under keys that don't occurred in result list (*Done*)
  * Extend UpdateMultiCache with options to:
    * add null values to cache under keys (@ParameterValueKeyProvider + @ReturnValueKeyProvider) \ (@ParameterDataUpdateContent + @ReturnDataUpdateContent) (*Done*)
  * Cache zones - instead of one global cache many caches using different providers, servers and configuration can be defined (*Done*)
  * ~~Custom spring namespace (ssm)~~ (*moved to 2.1.0*) 
  * Cache Disabling (*Done*)  
  * Deploy artifacts to maven central repository  

----
= Version 1 =

== ~~1.0.0~~ (Done) ==
  * If there's no problems with RC1, publish a full 1.0 version

== ~~1.0.0-RC1~~ (Done) ==
  * Package up a 'code complete' set for release to the wild.

== ~~0.11~~ (Done) ==
  * DOCUMENTATION IN PREPARATION FOR 1.0 RELEASE

== ~~0.10~~ (Done) ==
  * Fix Update*Cache. They assume the output is the source of the cachable data.

== ~~0.9~~ (Done) ==
  * Update individual item cache by assigned id

== ~~0.8~~ (Done) ==
  * Invalidate individual item cache by assigned id

== ~~0.7~~ (Done) ==
  * Read-through individual item cache by assigned id

== ~~0.6~~ (Done) ==
  * Invalidate multiplexed item cache

== ~~0.5~~ (Done) ==
  * Invalidate individual item cache

== ~~0.4~~ (Done) ==
  * Update multiplexed item cache

== ~~0.3~~ (Done) ==
  * Update individual item cache

== ~~0.2~~ (Done) ==
  * Read-through multiplexed item cache

== ~~0.1~~ (Done) ==
  * Read-through individual item cache